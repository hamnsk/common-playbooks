---
# tasks file for redis

- include_tasks: redis_tasks_firewall.yml
  tags: firewall

- include_tasks: redis_tasks_install_{{ansible_distribution|lower}}.yml

#- name: set fqdn redis master ip
#  set_fact:
#    redis_master_ip: "{{ lookup('dig', '{{item}}' ) }}"
#  with_items:
#    - "{{ hostvars[groups['redis-sentinel-group'][0]]['inventory_hostname'] }}"
#

- name: set redis_slaveof
  set_fact:
    redis_slaveof: "{{ hostvars[groups['redis-sentinel-group'][0]]['ansible_default_ipv4']['address'] }} 6379"


- block:
    - name: place redis.conf
      template: src=redis.conf.j2 dest=/etc/redis/redis.conf owner=redis group=root mode=0640
      register: _redis_conf

    - name: restart redis
      systemd: name=redis state=restarted
      run_once: true
      delegate_to: "{{item}}"
      with_items: "{{play_hosts}}"
      when: _redis_conf.changed

    - name: start redis
      systemd: name=redis state=started enabled=yes

- block:
    - lineinfile: # workaround: dumb sentinel rewrite own config after start
        path: /etc/redis/sentinel.conf
        line: "# Generated by CONFIG REWRITE"
        state: present
      check_mode: yes
      register: _sentinel_conf_lineinfile
      ignore_errors: true

    - set_fact:
        _sentinel_conf_rewrited: "{{ false if _sentinel_conf_lineinfile.changed else true }}"
    - debug: var=_sentinel_conf_rewrited

    - name: place rsentinel.conf
      template: src=redis-sentinel.conf.j2 dest=/etc/redis/sentinel.conf owner=redis group=root mode=0640
      when: not _sentinel_conf_rewrited

    - block:
        - set_fact:
            _masterip: "{{ redis_slaveof.split(' ')[0] if redis_slaveof else '' }}"
        - lineinfile: path=/etc/redis/sentinel.conf regexp={{item.regexp}} state=present line={{item.line}}
          with_items:
            - { regexp: '^bind ',
                line: "bind {{ redis_sentinel_bind }}" }
            - { regexp: '^port ',
                line: "port {{ redis_sentinel_port }}" }
            - { regexp: '^protected-mode ',
                line: "protected-mode {{ (redis_sentinel_protected_mode|bool) | ternary('yes', 'no') }}" }
            - { regexp: '^sentinel monitor ',
                line: "sentinel monitor {{ redis_sentinel_master_group_name }} {{ _masterip }} {{ redis_port }} 2" }
            - { regexp: '^sentinel down-after-milliseconds ',
                line: "sentinel down-after-milliseconds {{ redis_sentinel_master_group_name }} {{ redis_sentinel_down_after_milliseconds }}" }
            - { regexp: '^sentinel failover-timeout ',
                line: "sentinel failover-timeout {{ redis_sentinel_master_group_name }} {{ redis_sentinel_failover_timeout }}" }
          register: _redis_sentinel_conf

        - name: restart redis-sentinel
          systemd: name=redis-sentinel state=restarted
          run_once: true
          delegate_to: "{{item}}"
          with_items: "{{play_hosts}}"
          when:
            - _redis_sentinel_conf.changed
      when: _sentinel_conf_rewrited

  when: redis_use_sentinel|bool

- name: start or stop redis-sentinel
  systemd: name=redis-sentinel
           state={{ (redis_use_sentinel|bool) | ternary('started', 'stopped') }}
           enabled={{ (redis_use_sentinel|bool) | ternary('yes', 'no') }}
